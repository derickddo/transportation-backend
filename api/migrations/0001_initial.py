# Generated by Django 5.1.7 on 2025-03-22 13:22

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Location',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('address', models.CharField(max_length=500)),
                ('latitude', models.FloatField()),
                ('longitude', models.FloatField()),
            ],
        ),
        migrations.CreateModel(
            name='RouteInstruction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('halt_type', models.CharField(choices=[('STOP', 'Stop'), ('BREAK', 'Break')], max_length=10)),
                ('duration', models.IntegerField()),
                ('description', models.CharField(max_length=255)),
                ('day', models.IntegerField(default=1)),
                ('current_location', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='current_route_instructions', to='api.location')),
            ],
            options={
                'db_table': 'route_instruction',
            },
        ),
        migrations.CreateModel(
            name='Trip',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cycle_used', models.IntegerField()),
                ('distance', models.FloatField(blank=True, default=0, null=True)),
                ('number_of_days', models.IntegerField(default=1)),
                ('current_location', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='current_trips', to='api.location')),
                ('dropoff_location', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='dropoff_trips', to='api.location')),
                ('pickup_location', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='pickup_trips', to='api.location')),
                ('route_instructions', models.ManyToManyField(blank=True, related_name='trips', to='api.routeinstruction')),
            ],
            options={
                'db_table': 'trip',
            },
        ),
        migrations.CreateModel(
            name='LogEntry',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('driver_name', models.CharField(max_length=255)),
                ('load_number', models.CharField(blank=True, max_length=255, null=True)),
                ('carrier_name', models.CharField(blank=True, max_length=255, null=True)),
                ('truck_number', models.CharField(blank=True, max_length=255, null=True)),
                ('trailer_number', models.CharField(blank=True, max_length=255, null=True)),
                ('co_driver_name', models.CharField(blank=True, max_length=255, null=True)),
                ('remarks', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('trip', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='log_entries', to='api.trip')),
            ],
        ),
        migrations.AddConstraint(
            model_name='routeinstruction',
            constraint=models.CheckConstraint(condition=models.Q(('duration__gte', 0)), name='duration_gte_0'),
        ),
        migrations.AddConstraint(
            model_name='trip',
            constraint=models.CheckConstraint(condition=models.Q(('cycle_used__gte', 0)), name='cycle_used_gte_0'),
        ),
        migrations.AddConstraint(
            model_name='trip',
            constraint=models.CheckConstraint(condition=models.Q(('distance__gte', 0)), name='distance_gte_0'),
        ),
    ]
